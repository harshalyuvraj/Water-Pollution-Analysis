<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Environmental Data Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2c7873;
            --secondary-color: #6fb98f;
            --accent-color: #004445;
            --light-color: #f8f9fa;
            --dark-color: #2b2d42;
            --gradient-start: #2c7873;
            --gradient-end: #004445;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e8f0 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            color: var(--dark-color);
        }

        .container {
            max-width: 1200px;
            margin: 40px auto;
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            position: relative;
            overflow: hidden;
            transition: all 0.5s ease;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 10px;
            background: linear-gradient(90deg, var(--gradient-start), var(--gradient-end));
        }

        h1 {
            color: var(--accent-color);
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            margin-bottom: 30px;
            position: relative;
            display: inline-block;
            text-align: center;
            width: 100%;
        }

        h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, var(--gradient-start), var(--gradient-end));
            border-radius: 2px;
        }

        .box-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
            gap: 25px;
            justify-content: center;
        }

        .box {
            background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
            color: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            cursor: pointer;
            position: relative;
            overflow: hidden;
            z-index: 1;
            min-height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .box::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 100%);
            z-index: -1;
        }

        .box:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }

        .box:hover::after {
            animation: shine 1.5s;
        }

        @keyframes shine {
            0% { transform: translateX(-100%) rotate(20deg); }
            100% { transform: translateX(100%) rotate(20deg); }
        }

        .box::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 50%;
            height: 100%;
            background: linear-gradient(
                to right,
                rgba(255, 255, 255, 0) 0%,
                rgba(255, 255, 255, 0.3) 50%,
                rgba(255, 255, 255, 0) 100%
            );
            transform: translateX(-100%) rotate(20deg);
        }

        h2 {
            margin-bottom: 15px;
            font-size: 1.8rem;
            text-transform: uppercase;
            font-weight: 700;
            letter-spacing: 1px;
            position: relative;
            display: inline-block;
        }

        h2::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 50px;
            height: 3px;
            background-color: rgba(255, 255, 255, 0.7);
            transition: width 0.3s ease;
        }

        .box:hover h2::after {
            width: 100px;
        }

        .content {
            font-size: 1.1rem;
            font-weight: 600;
            line-height: 1.6;
            margin-top: 15px;
            opacity: 0.9;
            transition: all 0.3s ease;
        }

        .box:hover .content {
            opacity: 1;
            transform: translateY(-5px);
        }

        .back-button-container {
            position: fixed;
            top: 30px;
            left: 30px;
            z-index: 1000;
        }

        .back-button {
            background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .back-button:hover {
            box-shadow: 0 8px 25px rgba(47, 79, 79, 0.4);
            transform: translateY(-3px);
        }

        .back-button::before {
            content: '‚Üê';
            margin-right: 8px;
            font-size: 1.2rem;
        }

        .data-count {
            display: inline-block;
            background-color: rgba(255, 255, 255, 0.2);
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.9rem;
            margin-top: 10px;
            transition: all 0.3s ease;
        }

        .box:hover .data-count {
            background-color: rgba(255, 255, 255, 0.3);
            transform: scale(1.05);
        }

        @media (max-width: 768px) {
            .container {
                padding: 25px;
                margin: 20px;
            }
            
            .box-container {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .box {
                min-height: 180px;
                padding: 20px;
            }
            
            .back-button-container {
                top: 15px;
                left: 15px;
            }
        }

        /* Loading animation */
        @keyframes pulse {
            0% { opacity: 0.6; }
            50% { opacity: 1; }
            100% { opacity: 0.6; }
        }

        .loading {
            animation: pulse 1.5s infinite ease-in-out;
        }

        /* Data item animation */
        .data-item {
            padding: 5px 0;
            border-bottom: 1px dashed rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .data-item:hover {
            transform: translateX(5px);
            border-bottom-color: rgba(255, 255, 255, 0.5);
        }
    </style>
</head>
<body>
    <div class="back-button-container">
        <button class="back-button">Back to Home</button>
    </div>

    <div class="container">
        <h1>Environmental Data Dashboard</h1>

        <div class="box-container">
            <div class="box" id="physical" data-url="/pdi">
                <div>
                    <h2>Physical</h2>
                    <div class="content loading">Loading data...</div>
                </div>
                <div class="data-count">0 records</div>
            </div>

            <div class="box" id="chemical" data-url="/cdi">
                <div>
                    <h2>Chemical</h2>
                    <div class="content loading">Loading data...</div>
                </div>
                <div class="data-count">0 records</div>
            </div>

            <div class="box" id="biological" data-url="/bdi">
                <div>
                    <h2>Biological</h2>
                    <div class="content loading">Loading data...</div>
                </div>
                <div class="data-count">0 records</div>
            </div>

            <div class="box" id="air" data-url="/adi">
                <div>
                    <h2>Air Quality</h2>
                    <div class="content loading">Loading data...</div>
                </div>
                <div class="data-count">0 records</div>
            </div>

            <div class="box" id="other" data-url="/odi">
                <div>
                    <h2>Other Environmental</h2>
                    <div class="content loading">Loading data...</div>
                </div>
                <div class="data-count">0 records</div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Add click event to all boxes
            document.querySelectorAll(".box").forEach(box => {
                box.addEventListener("click", function () {
                    // Add ripple effect
                    const ripple = document.createElement("span");
                    ripple.classList.add("ripple-effect");
                    this.appendChild(ripple);
                    
                    // Get position of click
                    const rect = this.getBoundingClientRect();
                    const x = event.clientX - rect.left;
                    const y = event.clientY - rect.top;
                    
                    // Position ripple
                    ripple.style.left = `${x}px`;
                    ripple.style.top = `${y}px`;
                    
                    // Remove ripple after animation
                    setTimeout(() => {
                        ripple.remove();
                        const url = this.getAttribute("data-url");
                        window.location.href = url;
                    }, 800);
                });
            });

            // Back button functionality
            document.querySelector(".back-button").addEventListener("click", goBackHome);

            // Fetch data
            fetchData();
        });

        function goBackHome() {
            // Add animation before navigating
            document.querySelector(".container").style.opacity = "0";
            document.querySelector(".container").style.transform = "translateY(20px)";
            setTimeout(() => {
                window.location.href = '/fwater';
            }, 300);
        }

        async function fetchData() {
            try {
                // Show loading state
                document.querySelectorAll(".content").forEach(el => {
                    el.classList.add("loading");
                });

                const response = await fetch("/information/data");
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                
                const data = await response.json();
                console.log("Data received:", data);

                updateBox("physical", data.physical);
                updateBox("chemical", data.chemical);
                updateBox("biological", data.biological);
                updateBox("air", data.air);
                updateBox("other", data.other);
            } catch (error) {
                console.error("Error fetching data:", error);
                document.querySelectorAll(".content").forEach(el => {
                    el.textContent = "Error loading data";
                    el.classList.remove("loading");
                });
            }
        }

        function updateBox(id, dataset) {
            const box = document.getElementById(id);
            if (!box) return;

            const contentDiv = box.querySelector(".content");
            const countDiv = box.querySelector(".data-count");
            
            contentDiv.classList.remove("loading");

            if (Array.isArray(dataset) && dataset.length > 0) {
                contentDiv.innerHTML = dataset
                    .map((item, index) => 
                        `<div class="data-item">${index + 1}. ${item}</div>`
                    )
                    .join("");
                
                countDiv.textContent = `${dataset.length} records`;
                
                // Animate the count update
                countDiv.style.transform = "scale(1.1)";
                setTimeout(() => {
                    countDiv.style.transform = "scale(1)";
                }, 300);
            } else {
                contentDiv.innerHTML = `<em>No data available</em>`;
                countDiv.textContent = `0 records`;
            }
        }

        // Add ripple effect style dynamically
        const style = document.createElement("style");
        style.textContent = `
            .ripple-effect {
                position: absolute;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.7);
                transform: scale(0);
                animation: ripple 0.8s linear;
                pointer-events: none;
                width: 20px;
                height: 20px;
                margin-left: -10px;
                margin-top: -10px;
            }
            
            @keyframes ripple {
                to {
                    transform: scale(10);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
