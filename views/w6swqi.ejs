<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Water Quality Index Calculator</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --accent: #1abc9c;
            --danger: #e74c3c;
            --warning: #f39c12;
            --success: #2ecc71;
            --light: #ecf0f1;
            --dark: #2c3e50;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
            overflow-y: auto;
        }

        /* Water droplet animation */
        .water-droplet {
            position: absolute;
            background: rgba(52, 152, 219, 0.2);
            border-radius: 50%;
            pointer-events: none;
            z-index: -1;
            animation: droplet-fall linear infinite;
        }

        @keyframes droplet-fall {
            0% {
                transform: translateY(-100vh) scale(0.5);
                opacity: 0;
            }
            10% {
                opacity: 0.5;
            }
            100% {
                transform: translateY(100vh) scale(1);
                opacity: 0;
            }
        }

        /* Main container */
        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            width: 90%;
            max-width: 1200px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-radius: 20px;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            animation: fadeInUp 0.8s ease-out;
            z-index: 1;
        }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 10px;
            background: linear-gradient(90deg, var(--secondary) 0%, var(--accent) 100%);
        }

        .container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
        }

        h3 {
            text-align: center;
            color: var(--primary);
            font-size: 28px;
            margin-bottom: 25px;
            position: relative;
            padding-bottom: 15px;
        }

        h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, var(--secondary), var(--accent));
            border-radius: 2px;
        }

        /* Table styling */
        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin: 30px 0;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            animation: fadeIn 0.8s ease-out;
        }

        th, td {
            padding: 18px;
            text-align: left;
            font-size: 16px;
            transition: all 0.3s;
        }

        th {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
            color: white;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 16px;
        }

        tr:nth-child(even) {
            background-color: rgba(52, 152, 219, 0.05);
        }

        tr:hover td {
            background-color: rgba(52, 152, 219, 0.1);
            transform: translateX(5px);
        }

        /* Input styling */
        .input-field {
            width: 100%;
            padding: 14px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            transition: all 0.3s;
            font-size: 15px;
            background-color: rgba(255, 255, 255, 0.8);
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
        }

        .input-field:focus {
            border-color: var(--secondary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
            background-color: white;
        }

        .range-box {
            background-color: rgba(52, 152, 219, 0.1);
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 14px;
            color: var(--dark);
            display: inline-block;
            border-left: 4px solid var(--accent);
        }

        /* Result styling */
        .index-result {
            margin: 30px auto;
            padding: 20px;
            border-radius: 10px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(240, 248, 255, 0.9) 100%);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            text-align: center;
            font-size: 22px;
            font-weight: 600;
            color: var(--primary);
            transition: all 0.5s ease;
            opacity: 0;
            height: 0;
            overflow: hidden;
            max-width: 600px;
        }

        .index-result.show {
            opacity: 1;
            height: auto;
            padding: 20px;
            margin: 30px auto;
        }

        .quality-indicator {
            display: inline-block;
            margin-top: 10px;
            padding: 8px 20px;
            border-radius: 50px;
            font-size: 18px;
            font-weight: 600;
        }

        /* Button styling */
        .buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }

        .btn {
            padding: 14px 30px;
            font-size: 16px;
            border: none;
            cursor: pointer;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            min-width: 150px;
            text-align: center;
        }

        .btn:nth-child(1) {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
            color: white;
        }

        .btn:nth-child(2) {
            background: linear-gradient(135deg, var(--accent) 0%, #16a085 100%);
            color: white;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }

        .btn:active {
            transform: translateY(1px);
        }

        .btn::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(rgba(255, 255, 255, 0.2), transparent);
            transform: translateY(-100%);
            transition: transform 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
        }

        .btn:hover::after {
            transform: translateY(0);
        }

        /* Back button */
        .back-button-container {
            position: fixed;
            top: 30px;
            left: 30px;
            z-index: 100;
        }

        .back-button {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 50px;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            font-weight: 500;
            box-shadow: 0 4px 10px rgba(47, 79, 79, 0.3);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .back-button:hover {
            transform: translateX(-5px) scale(1.05);
            box-shadow: 0 8px 20px rgba(47, 79, 79, 0.4);
        }

        /* Water wave animation */
        .water-wave {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100px;
            background: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1200 120" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" fill="%231abc9c" opacity=".25"/><path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" fill="%231abc9c" opacity=".5"/><path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="%231abc9c"/></svg>');
            background-size: cover;
            animation: wave 15s linear infinite;
            z-index: -1;
        }

        @keyframes wave {
            0% { background-position-x: 0; }
            100% { background-position-x: 1200px; }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                width: 95%;
                padding: 25px;
            }
            
            table {
                display: block;
                overflow-x: auto;
            }
            
            .buttons {
                flex-direction: column;
            }
            
            .back-button-container {
                top: 15px;
                left: 15px;
            }
            
            th, td {
                padding: 12px;
                font-size: 14px;
            }
            
            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Water droplets animation -->
    <div id="droplets"></div>
    
    <!-- Back to Home Button -->
    <div class="back-button-container animate__animated animate__fadeInLeft">
        <button class="back-button" onclick="goBackHome()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>
            Back to Home
        </button>
    </div>

    <div class="container animate__animated animate__fadeInUp">
        <h3>Advanced Water Quality Index Calculator</h3>
        
        <table>
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Data Entry</th>
                    <th>Parameter Range</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Temperature (°C)</td>
                    <td><input class="input-field" type="number" id="temperature" placeholder="Enter value (0-40)" min="0" max="40" step="0.1"></td>
                    <td><div class="range-box">0°C ➞ 40°C</div></td>
                </tr>
                <tr>
                    <td>BOD (mg/L)</td>
                    <td><input class="input-field" type="number" id="bod" placeholder="Enter value (0-12)" min="0" max="12" step="0.1"></td>
                    <td><div class="range-box">0 mg/L ➞ 12 mg/L</div></td>
                </tr>
                <tr>
                    <td>TSS (mg/L)</td>
                    <td><input class="input-field" type="number" id="tss" placeholder="Enter value (0-250)" min="0" max="250" step="1"></td>
                    <td><div class="range-box">0 mg/L ➞ 250 mg/L</div></td>
                </tr>
                <tr>
                    <td>DO (mg/L)</td>
                    <td><input class="input-field" type="number" id="do" placeholder="Enter value (0-10)" min="0" max="10" step="0.1"></td>
                    <td><div class="range-box">0 mg/L ➞ 10 mg/L</div></td>
                </tr>
                <tr>
                    <td>Conductivity (μS/cm)</td>
                    <td><input class="input-field" type="number" id="conductivity" placeholder="Enter value (1-4000)" min="1" max="4000" step="1"></td>
                    <td><div class="range-box">1 μS/cm ➞ 4000 μS/cm</div></td>
                </tr>
            </tbody>
        </table>

        <div class="index-result" id="waterQualityIndex">
            <!-- Result will be inserted here by JavaScript -->
        </div>

        <div class="buttons">
            <button class="btn" onclick="resetForm()">Reset</button>
            <button class="btn" onclick="submitForm()">Calculate Index</button>
        </div>
    </div>
    
    <!-- Water wave at bottom -->
    <div class="water-wave"></div>

    <script>
        // Create water droplets
        function createDroplets() {
            const container = document.getElementById('droplets');
            
            for (let i = 0; i < 20; i++) {
                const droplet = document.createElement('div');
                droplet.classList.add('water-droplet');
                droplet.style.left = Math.random() * 100 + 'vw';
                droplet.style.width = Math.random() * 15 + 5 + 'px';
                droplet.style.height = droplet.style.width;
                droplet.style.animationDuration = Math.random() * 5 + 3 + 's';
                droplet.style.animationDelay = Math.random() * 5 + 's';
                container.appendChild(droplet);
            }
        }

        function goBackHome() {
            // Add animation before redirecting
            document.querySelector('.container').classList.add('animate__animated', 'animate__fadeOutDown');
            setTimeout(() => {
                window.location.href = 'fwater';
            }, 500);
        }

        function resetForm() {
            document.getElementById("temperature").value = '';
            document.getElementById("bod").value = '';
            document.getElementById("tss").value = '';
            document.getElementById("do").value = '';
            document.getElementById("conductivity").value = '';
            
            const resultElement = document.getElementById("waterQualityIndex");
            resultElement.classList.remove('show');
            setTimeout(() => {
                resultElement.innerHTML = '';
            }, 300);
        }

        function submitForm() {
            // Get all values
            const temperature = parseFloat(document.getElementById("temperature").value) || 0;
            const bod = parseFloat(document.getElementById("bod").value) || 0;
            const tss = parseFloat(document.getElementById("tss").value) || 0;
            const doValue = parseFloat(document.getElementById("do").value) || 0;
            const conductivity = parseFloat(document.getElementById("conductivity").value) || 0;

            // Validate inputs
            const errors = [];
            if (temperature < 0 || temperature > 40) errors.push("Temperature must be between 0-40°C");
            if (bod < 0 || bod > 12) errors.push("BOD must be between 0-12 mg/L");
            if (tss < 0 || tss > 250) errors.push("TSS must be between 0-250 mg/L");
            if (doValue < 0 || doValue > 10) errors.push("DO must be between 0-10 mg/L");
            if (conductivity < 1 || conductivity > 4000) errors.push("Conductivity must be between 1-4000 μS/cm");
            
            if (errors.length > 0) {
                showError("Please correct the following errors:<br>" + errors.join("<br>"));
                return;
            }

            // Calculate index (more sophisticated calculation)
            const wqi = calculateIndex(temperature, bod, tss, doValue, conductivity);
            
            // Determine quality
            let quality, qualityColor;
            if (wqi >= 80) {
                quality = "Excellent";
                qualityColor = "var(--success)";
            } else if (wqi >= 60) {
                quality = "Good";
                qualityColor = "#2ecc71";
            } else if (wqi >= 40) {
                quality = "Fair";
                qualityColor = "var(--warning)";
            } else if (wqi >= 20) {
                quality = "Poor";
                qualityColor = "#e67e22";
            } else {
                quality = "Very Poor";
                qualityColor = "var(--danger)";
            }

            // Display result
            const resultElement = document.getElementById("waterQualityIndex");
            resultElement.innerHTML = `
                <div style="font-size: 24px; margin-bottom: 10px;">Water Quality Index</div>
                <div style="font-size: 42px; font-weight: 700; color: ${qualityColor}; margin: 10px 0;">${wqi.toFixed(2)}</div>
                <div class="quality-indicator" style="background: ${qualityColor + '20'}; color: ${qualityColor}">
                    ${quality} Water Quality
                </div>
                <div style="margin-top: 15px; font-size: 14px; color: #7f8c8d">
                    Based on temperature, BOD, TSS, DO, and conductivity measurements
                </div>
            `;
            
            // Show result with animation
            setTimeout(() => {
                resultElement.classList.add('show');
                resultElement.classList.add('animate__animated', 'animate__fadeInUp');
            }, 100);
            
            // Add celebration for good results
            if (wqi >= 60) {
                celebrate();
            }
        }

        function calculateIndex(temp, bod, tss, doValue, conductivity) {
            // Normalize parameters (0-1 scale where 1 is best)
            const tempNorm = 1 - Math.min(Math.abs(temp - 20) / 20, 1); // Ideal around 20°C
            const bodNorm = 1 - (bod / 12); // Lower BOD is better
            const tssNorm = 1 - (tss / 250); // Lower TSS is better
            const doNorm = doValue / 10; // Higher DO is better
            const condNorm = 1 - ((conductivity - 1) / 3999); // Lower conductivity is better
            
            // Apply weights (adjust as needed)
            const weights = {
                temp: 0.15,
                bod: 0.25,
                tss: 0.2,
                do: 0.25,
                cond: 0.15
            };
            
            // Calculate weighted sum
            const weightedSum = 
                (tempNorm * weights.temp) + 
                (bodNorm * weights.bod) + 
                (tssNorm * weights.tss) + 
                (doNorm * weights.do) + 
                (condNorm * weights.cond);
            
            // Convert to 0-100 scale
            return weightedSum * 100;
        }

        function showError(message) {
            const resultElement = document.getElementById("waterQualityIndex");
            resultElement.innerHTML = `
                <div style="color: var(--danger); font-weight: 500; text-align: center;">
                    ${message}
                </div>
            `;
            
            // Show with animation
            setTimeout(() => {
                resultElement.classList.add('show');
                resultElement.classList.add('animate__animated', 'animate__shakeX');
            }, 100);
        }

        function celebrate() {
            const container = document.querySelector('.container');
            
            for (let i = 0; i < 30; i++) {
                const confetti = document.createElement('div');
                confetti.style.position = 'absolute';
                confetti.style.width = Math.random() * 10 + 5 + 'px';
                confetti.style.height = confetti.style.width;
                confetti.style.backgroundColor = `hsl(${Math.random() * 360}, 80%, 60%)`;
                confetti.style.borderRadius = '50%';
                confetti.style.top = '0';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.opacity = '0.8';
                confetti.style.animation = 'confetti-fall ' + (Math.random() * 3 + 2) + 's linear forwards';
                container.appendChild(confetti);
                
                setTimeout(() => {
                    confetti.remove();
                }, 3000);
            }
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', () => {
            createDroplets();
            
            // Add input validation
            const inputs = document.querySelectorAll('.input-field');
            inputs.forEach(input => {
                input.addEventListener('blur', () => {
                    const value = parseFloat(input.value);
                    if (isNaN(value)) return;
                    
                    if (input.hasAttribute('min') && value < parseFloat(input.min)) {
                        input.value = input.min;
                    }
                    if (input.hasAttribute('max') && value > parseFloat(input.max)) {
                        input.value = input.max;
                    }
                });
            });
        });

        // Confetti animation style
        const style = document.createElement('style');
        style.textContent = `
            @keyframes confetti-fall {
                0% {
                    transform: translateY(-100px) rotate(0deg);
                    opacity: 0.8;
                }
                100% {
                    transform: translateY(500px) rotate(360deg);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>