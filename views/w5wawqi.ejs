<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WA-WQI Calculator | AquaGuard</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary: #2F4F4F;
            --secondary: #4b6cb7;
            --accent: #182848;
            --light: #F8F9FA;
            --dark: #212529;
            --success: #27ae60;
            --warning: #f39c12;
            --danger: #e74c3c;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            overflow-x: hidden;
            position: relative;
        }
        
        /* Floating particles */
        .particle {
            position: absolute;
            background: rgba(75, 108, 183, 0.1);
            border-radius: 50%;
            pointer-events: none;
            z-index: -1;
            animation: float linear infinite;
        }
        
        @keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-1000px) rotate(720deg);
                opacity: 0;
            }
        }
        
        /* Main container */
        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            width: 70%;
            max-width: 900px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-radius: 20px;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            animation: fadeInUp 0.8s ease-out;
        }
        
        .container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 8px;
            background: linear-gradient(90deg, var(--secondary) 0%, var(--accent) 100%);
        }
        
        h2 {
            text-align: center;
            color: var(--primary);
            font-size: 28px;
            margin-bottom: 15px;
            position: relative;
            display: inline-block;
            width: 100%;
        }
        
        h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, var(--secondary), var(--accent));
            border-radius: 2px;
        }
        
        /* Table styling */
        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin: 30px 0;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            animation: fadeIn 0.8s ease-out;
        }
        
        th, td {
            padding: 15px;
            text-align: left;
            font-size: 16px;
            transition: all 0.3s;
        }
        
        th {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
            color: white;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 15px;
        }
        
        tr:nth-child(even) {
            background-color: rgba(178, 235, 242, 0.2);
        }
        
        tr:hover td {
            background-color: rgba(178, 235, 242, 0.4);
            transform: translateX(5px);
        }
        
        /* Input styling */
        input {
            width: 90%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            transition: all 0.3s;
            font-size: 15px;
            background-color: rgba(255, 255, 255, 0.8);
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        input:focus {
            border-color: var(--secondary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(75, 108, 183, 0.2);
            background-color: white;
        }
        
        /* Button styling */
        .button-container {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
            gap: 20px;
        }
        
        button {
            padding: 14px 25px;
            font-size: 16px;
            border: none;
            cursor: pointer;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            letter-spacing: 0.5px;
            flex: 1;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        button::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(rgba(255, 255, 255, 0.2), transparent);
            transform: translateY(-100%);
            transition: transform 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
        }
        
        button:hover::after {
            transform: translateY(0);
        }
        
        #resetBtn {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
            color: white;
        }
        
        #calculateBtn {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
            color: white;
        }
        
        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        
        button:active {
            transform: translateY(1px);
        }
        
        /* Result styling */
        #result {
            margin-top: 30px;
            padding: 20px;
            border-radius: 10px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(240, 248, 255, 0.9) 100%);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.5s ease;
            opacity: 0;
            height: 0;
            overflow: hidden;
        }
        
        #result.show {
            opacity: 1;
            height: auto;
            padding: 20px;
            margin-top: 30px;
        }
        
        .result-value {
            font-size: 32px;
            font-weight: 700;
            margin: 10px 0;
            display: inline-block;
            padding: 10px 20px;
            border-radius: 50px;
            background: linear-gradient(135deg, rgba(178, 235, 242, 0.3) 0%, rgba(128, 222, 234, 0.3) 100%);
        }
        
        .result-quality {
            font-size: 24px;
            font-weight: 600;
            margin-top: 10px;
            padding: 8px 20px;
            border-radius: 50px;
            display: inline-block;
        }
        
        /* Back button */
        .back-button-container {
            position: fixed;
            top: 30px;
            left: 30px;
            z-index: 100;
        }
        
        .back-button {
            background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 50px;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            font-weight: 500;
            box-shadow: 0 4px 10px rgba(47, 79, 79, 0.3);
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .back-button:hover {
            transform: translateX(-5px) scale(1.05);
            box-shadow: 0 8px 20px rgba(47, 79, 79, 0.4);
        }
        
        /* Water wave animation */
        .water-wave {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100px;
            background: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1200 120" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" fill="%234b6cb7" opacity=".25"/><path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" fill="%234b6cb7" opacity=".5"/><path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="%234b6cb7"/></svg>');
            background-size: cover;
            animation: wave 15s linear infinite;
        }
        
        @keyframes wave {
            0% { background-position-x: 0; }
            100% { background-position-x: 1200px; }
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                width: 90%;
                padding: 25px;
            }
            
            table {
                display: block;
                overflow-x: auto;
            }
            
            .button-container {
                flex-direction: column;
            }
            
            .back-button-container {
                top: 15px;
                left: 15px;
            }
        }
        
        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        @keyframes confetti-fall {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 0.8;
            }
            100% {
                transform: translateY(500px) rotate(360deg);
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <!-- Floating particles -->
    <div id="particles"></div>
    
    <!-- Back to Home Button -->
    <div class="back-button-container animate__animated animate__fadeInLeft">
        <button class="back-button" onclick="goBackHome()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>
            Back to Home
        </button>
    </div>

    <div class="container animate__animated animate__fadeInUp">
        <h2>Weighted Arithmetic Water Quality Index (WA-WQI) Calculator</h2>
        <p class="text-gray-600 mb-6 text-center">Calculate water quality using the Weighted Arithmetic method</p>
        
        <table>
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Observed Value (Vn)</td>
                    <td><input type="number" id="vn" placeholder="Enter observed value" step="any"></td>
                </tr>
                <tr>
                    <td>Standard Permissible Value (Sn)</td>
                    <td><input type="number" id="sn" placeholder="Enter standard value" step="any"></td>
                </tr>
                <tr>
                    <td>Ideal Value (Vi)</td>
                    <td><input type="number" id="vi" placeholder="Enter ideal value" step="any"></td>
                </tr>
                <tr>
                    <td>Weight (Wi)</td>
                    <td><input type="number" id="wi" placeholder="Enter weight" step="any"></td>
                </tr>
            </tbody>
        </table>

        <div class="button-container">
            <button id="resetBtn" onclick="resetForm()">Reset</button>
            <button id="calculateBtn" onclick="calculateWAWQI()">Calculate WA-WQI</button>
        </div>

        <div id="result"></div>
    </div>
    
    <!-- Water wave at bottom -->
    <div class="water-wave"></div>

    <script>
        // Create floating particles
        function createParticles() {
            const container = document.getElementById('particles');
            const colors = ['rgba(75, 108, 183, 0.1)', 'rgba(178, 235, 242, 0.1)', 'rgba(128, 222, 234, 0.1)'];
            
            for (let i = 0; i < 30; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                particle.style.left = Math.random() * 100 + 'vw';
                particle.style.bottom = -Math.random() * 100 + 'px';
                particle.style.width = Math.random() * 15 + 5 + 'px';
                particle.style.height = particle.style.width;
                particle.style.background = colors[Math.floor(Math.random() * colors.length)];
                particle.style.animationDuration = Math.random() * 20 + 10 + 's';
                particle.style.animationDelay = Math.random() * 10 + 's';
                container.appendChild(particle);
            }
        }

        function goBackHome() {
            // Add animation before redirecting
            document.querySelector('.container').classList.add('animate__animated', 'animate__fadeOutDown');
            setTimeout(() => {
                window.location.href = 'fwater';
            }, 500);
        }

        function calculateWAWQI() {
            const vn = parseFloat(document.getElementById("vn").value);
            const sn = parseFloat(document.getElementById("sn").value);
            const vi = parseFloat(document.getElementById("vi").value);
            const wi = parseFloat(document.getElementById("wi").value);
            
            if (isNaN(vn)) {
                showError("Please enter a valid Observed Value");
                return;
            }
            if (isNaN(sn) || sn === 0) {
                showError("Please enter a valid Standard Value (cannot be zero)");
                return;
            }
            if (isNaN(vi)) {
                showError("Please enter a valid Ideal Value");
                return;
            }
            if (isNaN(wi) || wi === 0) {
                showError("Please enter a valid Weight (cannot be zero)");
                return;
            } 
            
            const qi = ((vn - vi) / (sn - vi)) * 100;
            const wawqi = (qi * wi) / wi;
            
            let quality = "";
            let qualityColor = "";
            
            if (wawqi <= 25) {
                quality = "Excellent";
                qualityColor = "var(--success)";
            } else if (wawqi <= 50) {
                quality = "Good";
                qualityColor = "#2ecc71";
            } else if (wawqi <= 75) {
                quality = "Poor";
                qualityColor = "var(--warning)";
            } else if (wawqi <= 100) {
                quality = "Very Poor";
                qualityColor = "var(--danger)";
            } else {
                quality = "Unfit for Use";
                qualityColor = "#c0392b";
            }

            const resultElement = document.getElementById("result");
            resultElement.innerHTML = `
                <h3 class="text-center mb-4">WA-WQI Result</h3>
                <div class="result-value text-center" style="color: ${qualityColor}">${wawqi.toFixed(2)}</div>
                <div class="result-quality text-center" style="background: ${qualityColor + '20'}; color: ${qualityColor}">
                    ${quality} Water Quality
                </div>
                <p class="text-center mt-4 text-gray-600">
                    Based on Weighted Arithmetic methodology
                </p>
            `;
            
            // Show result with animation
            setTimeout(() => {
                resultElement.classList.add('show');
                resultElement.classList.add('animate__animated', 'animate__fadeInUp');
            }, 100);
            
            // Add celebration effect for good/excellent results
            if (wawqi <= 50) {
                celebrate();
            }
            
            // Save to database (optional)
            saveToDatabase({
                vn: vn,
                sn: sn,
                vi: vi,
                wi: wi,
                wawqi: wawqi.toFixed(2),
                quality: quality
            });
        }
        
        function showError(message) {
            const resultElement = document.getElementById("result");
            resultElement.innerHTML = `<div style="color: var(--danger); font-weight: 500; text-align: center;">${message}</div>`;
            
            // Show result with animation
            setTimeout(() => {
                resultElement.classList.add('show');
                resultElement.classList.add('animate__animated', 'animate__shakeX');
            }, 100);
        }
        
        function resetForm() {
            document.getElementById("vn").value = "";
            document.getElementById("sn").value = "";
            document.getElementById("vi").value = "";
            document.getElementById("wi").value = "";
            
            const resultElement = document.getElementById("result");
            resultElement.classList.remove('show');
            setTimeout(() => {
                resultElement.innerHTML = "";
            }, 300);
        }
        
        function celebrate() {
            const container = document.querySelector('.container');
            
            for (let i = 0; i < 50; i++) {
                const confetti = document.createElement('div');
                confetti.classList.add('particle');
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.bottom = '100%';
                confetti.style.width = Math.random() * 10 + 5 + 'px';
                confetti.style.height = confetti.style.width;
                confetti.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, 50%)`;
                confetti.style.animation = 'confetti-fall ' + (Math.random() * 3 + 2) + 's linear forwards';
                container.appendChild(confetti);
                
                setTimeout(() => {
                    confetti.remove();
                }, 5000);
            }
        }
        
        function saveToDatabase(data) {
            // Here you would typically send data to your backend
            // Example using fetch API:
            /*
            fetch('/api/wawqi', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
            */
        }

        // Initialize particles when page loads
        document.addEventListener('DOMContentLoaded', () => {
            createParticles();
            
            // Add input validation
            const inputs = document.querySelectorAll('input[type="number"]');
            inputs.forEach(input => {
                input.addEventListener('blur', () => {
                    const value = parseFloat(input.value);
                    if (isNaN(value)) return;
                    
                    if (input.hasAttribute('min') && value < parseFloat(input.min)) {
                        input.value = input.min;
                    }
                    if (input.hasAttribute('max') && value > parseFloat(input.max)) {
                        input.value = input.max;
                    }
                });
            });
        });
    </script>
</body>
</html>