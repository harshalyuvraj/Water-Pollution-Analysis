<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DELPHI Water Quality Index Calculator | AquaGuard</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary: #2F4F4F;
            --secondary: #FFD700;
            --accent: #00B4D8;
            --light: #F8F9FA;
            --dark: #212529;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            overflow-x: hidden;
            position: relative;
        }
        
        /* Floating particles */
        .particle {
            position: absolute;
            background: rgba(47, 79, 79, 0.1);
            border-radius: 50%;
            pointer-events: none;
            z-index: -1;
            animation: float linear infinite;
        }
        
        @keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-1000px) rotate(720deg);
                opacity: 0;
            }
        }
        
        /* Main container */
        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            width: 60%;
            max-width: 800px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
            border-radius: 20px;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            animation: fadeInUp 0.8s ease-out;
        }
        
        .container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 100%;
            background: linear-gradient(45deg, transparent 65%, rgba(0, 123, 255, 0.1) 100%);
            transform: rotate(30deg);
            z-index: -1;
            animation: shine 8s infinite linear;
        }
        
        @keyframes shine {
            0% {
                transform: rotate(30deg) translate(-10%, -10%);
            }
            100% {
                transform: rotate(30deg) translate(10%, 10%);
            }
        }
        
        h1 {
            text-align: center;
            color: var(--primary);
            font-size: 28px;
            margin-bottom: 15px;
            position: relative;
            display: inline-block;
            width: 100%;
        }
        
        h1::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, var(--accent), var(--primary));
            border-radius: 2px;
        }
        
        .calculator {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .parameter-row {
            display: flex;
            margin-bottom: 20px;
            align-items: center;
            gap: 15px;
            background-color: rgba(178, 235, 242, 0.1);
            padding: 15px;
            border-radius: 8px;
            transition: all 0.3s;
        }
        
        .parameter-row:hover {
            background-color: rgba(178, 235, 242, 0.3);
            transform: translateX(5px);
        }
        
        .parameter-row span {
            min-width: 100px;
            font-weight: 500;
            color: var(--dark);
        }
        
        .parameter-row input {
            flex: 1;
            padding: 12px 15px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s;
            background-color: rgba(255, 255, 255, 0.8);
        }
        
        .parameter-row input:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(0, 180, 216, 0.2);
            background-color: white;
        }
        
        .parameter-row button {
            background-color: var(--danger);
            color: white;
            border: none;
            padding: 12px 18px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .parameter-row button:hover {
            background-color: #c82333;
            transform: scale(1.05);
        }
        
        .add-parameter {
            background-color: var(--success);
            color: white;
            border: none;
            padding: 14px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            margin-top: 20px;
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            box-shadow: 0 4px 8px rgba(40, 167, 69, 0.2);
        }
        
        .add-parameter:hover {
            background-color: #218838;
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(40, 167, 69, 0.3);
        }
        
        .add-parameter:active {
            transform: translateY(1px);
        }
        
        .calculate-btn {
            background: linear-gradient(135deg, var(--accent) 0%, #0096c7 100%);
            color: white;
            border: none;
            padding: 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            margin-top: 25px;
            width: 100%;
            position: relative;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 180, 216, 0.3);
        }
        
        .calculate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 180, 216, 0.4);
        }
        
        .calculate-btn:active {
            transform: translateY(1px);
        }
        
        .calculate-btn::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(rgba(255, 255, 255, 0.2), transparent);
            transform: translateY(-100%);
            transition: transform 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
        }
        
        .calculate-btn:hover::after {
            transform: translateY(0);
        }
        
        .result {
            margin-top: 30px;
            padding: 25px;
            border-radius: 12px;
            text-align: center;
            font-size: 20px;
            font-weight: bold;
            transition: all 0.5s ease;
            opacity: 0;
            height: 0;
            overflow: hidden;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(240, 248, 255, 0.9) 100%);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }
        
        .result.show {
            opacity: 1;
            height: auto;
            padding: 25px;
            margin-top: 30px;
            animation: fadeInUp 0.8s ease-out;
        }
        
        .excellent { 
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.2) 100%);
            color: var(--success);
            border-left: 4px solid var(--success);
        }
        
        .good { 
            background: linear-gradient(135deg, rgba(0, 180, 216, 0.1) 0%, rgba(0, 180, 216, 0.2) 100%);
            color: var(--accent);
            border-left: 4px solid var(--accent);
        }
        
        .fair { 
            background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.2) 100%);
            color: var(--warning);
            border-left: 4px solid var(--warning);
        }
        
        .poor { 
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.1) 0%, rgba(220, 53, 69, 0.2) 100%);
            color: var(--danger);
            border-left: 4px solid var(--danger);
        }
        
        /* Back button */
        .back-button-container {
            position: fixed;
            top: 30px;
            left: 30px;
            z-index: 100;
        }
        
        .back-button {
            background: linear-gradient(135deg, var(--primary) 0%, #3a7d7d 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 50px;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            font-weight: 500;
            box-shadow: 0 4px 10px rgba(58, 97, 97, 0.3);
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .back-button:hover {
            transform: translateX(-5px) scale(1.05);
            box-shadow: 0 8px 20px rgba(47, 79, 79, 0.4);
        }
        
        /* Water wave animation */
        .water-wave {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100px;
            background: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1200 120" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" fill="%232F4F4F" opacity=".25"/><path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" fill="%232F4F4F" opacity=".5"/><path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="%232F4F4F"/></svg>');
            background-size: cover;
            animation: wave 15s linear infinite;
            z-index: -1;
        }
        
        @keyframes wave {
            0% { background-position-x: 0; }
            100% { background-position-x: 1200px; }
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                width: 90%;
                padding: 25px;
            }
            
            .parameter-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            
            .parameter-row input {
                width: 100%;
            }
            
            .back-button-container {
                top: 15px;
                left: 15px;
            }
        }
        
        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <!-- Floating particles -->
    <div id="particles"></div>
    
    <!-- Back to Home Button -->
    <div class="back-button-container animate__animated animate__fadeInLeft">
        <button class="back-button" onclick="goBackHome()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>
            Back to Home
        </button>
    </div>

    <div class="container animate__animated animate__fadeInUp">
        <h1>DELPHI Water Quality Index Calculator</h1>
        
        <div class="calculator">
            <div id="parameters-container">
                <div class="parameter-row">
                    <span>Parameter 1:</span>
                    <input type="text" placeholder="Parameter name" class="param-name">
                    <input type="number" placeholder="Rating (0-100)" min="0" max="100" class="param-rating">
                    <input type="number" placeholder="Weight (0-1)" step="0.01" min="0" max="1" class="param-weight">
                    <button class="remove-param">Remove</button>
                </div>
            </div>
            
            <button class="add-parameter">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                </svg>
                Add Parameter
            </button>
            <button class="calculate-btn" type="button">Calculate WQI</button>
            
            <div id="result" class="result"></div>
        </div>
    </div>
    
    <!-- Water wave at bottom -->
    <div class="water-wave"></div>

    <script>
        // Create floating particles
        function createParticles() {
            const container = document.getElementById('particles');
            const colors = ['rgba(47, 79, 79, 0.1)', 'rgba(178, 235, 242, 0.1)', 'rgba(128, 222, 234, 0.1)'];
            
            for (let i = 0; i < 30; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                particle.style.left = Math.random() * 100 + 'vw';
                particle.style.bottom = -Math.random() * 100 + 'px';
                particle.style.width = Math.random() * 15 + 5 + 'px';
                particle.style.height = particle.style.width;
                particle.style.background = colors[Math.floor(Math.random() * colors.length)];
                particle.style.animationDuration = Math.random() * 20 + 10 + 's';
                particle.style.animationDelay = Math.random() * 10 + 's';
                container.appendChild(particle);
            }
        }

        function goBackHome() {
            // Add animation before redirecting
            document.querySelector('.container').classList.add('animate__animated', 'animate__fadeOutDown');
            setTimeout(() => {
                window.location.href = 'fwater';
            }, 500);
        }

        document.addEventListener('DOMContentLoaded', function() {
    createParticles();

    const container = document.getElementById('parameters-container');
    const addBtn = document.querySelector('.add-parameter');
    const calculateBtn = document.querySelector('.calculate-btn');
    const resultDiv = document.getElementById('result');

    if (!container || !addBtn || !calculateBtn || !resultDiv) {
        console.error("One or more required elements are missing.");
        return;
    }

    // Add new parameter row
    addBtn.addEventListener('click', function() {
        const count = container.children.length + 1;
        const newRow = document.createElement('div');
        newRow.className = 'parameter-row';
        newRow.innerHTML = `
            <span>Parameter ${count}:</span>
            <input type="text" placeholder="Parameter name" class="param-name">
            <input type="number" placeholder="Rating (0-100)" min="0" max="100" class="param-rating">
            <input type="number" placeholder="Weight (0-1)" step="0.01" min="0" max="1" class="param-weight">
            <button class="remove-param">Remove</button>
        `;
        container.appendChild(newRow);

        newRow.querySelector('.remove-param').addEventListener('click', function() {
            container.removeChild(newRow);
            updateParameterNumbers();
        });
    });

    // Remove parameter row
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-param')) {
            const row = e.target.parentNode;
            container.removeChild(row);
            updateParameterNumbers();
        }
    });

    // Calculate WQI
    calculateBtn.addEventListener('click', function() {
        const rows = container.querySelectorAll('.parameter-row');
        let totalWeight = 0;
        let wqi = 0;

        rows.forEach(row => {
            const name = row.querySelector('.param-name').value || 'Unnamed';
            const rating = parseFloat(row.querySelector('.param-rating').value) || 0;
            const weight = parseFloat(row.querySelector('.param-weight').value) || 0;

            if (weight > 0) {
                wqi += rating * weight;
                totalWeight += weight;
            }
        });

        if (totalWeight > 0) {
            // Normalize in case weights don't sum to 1
            const normalizedWQI = wqi / totalWeight;
            displayResult(normalizedWQI);
        } else {
            resultDiv.textContent = 'Please enter valid weights (sum should be > 0)';
            resultDiv.classList.add('show', 'poor');
        }
    });

    // Update parameter numbers when rows are added/removed
    function updateParameterNumbers() {
        const rows = container.querySelectorAll('.parameter-row');
        rows.forEach((row, index) => {
            row.querySelector('span').textContent = `Parameter ${index + 1}:`;
        });
    }

    // Display result with appropriate styling
    function displayResult(wqi) {
        if (!resultDiv) return;

        resultDiv.style.display = 'block';
        resultDiv.textContent = `WQI Score: ${wqi.toFixed(1)} - `;

        // Remove existing classes before adding a new one
        resultDiv.classList.remove('excellent', 'good', 'fair', 'poor');

        if (wqi >= 90) {
            resultDiv.textContent += 'EXCELLENT';
            resultDiv.classList.add('show', 'excellent');
        } else if (wqi >= 70) {
            resultDiv.textContent += 'GOOD';
            resultDiv.classList.add('show', 'good');
        } else if (wqi >= 50) {
            resultDiv.textContent += 'FAIR';
            resultDiv.classList.add('show', 'fair');
        } else {
            resultDiv.textContent += 'POOR';
            resultDiv.classList.add('show', 'poor');
        }

        resultDiv.scrollIntoView({ behavior: 'smooth' });
    }
});

    </script>
</body>
</html>