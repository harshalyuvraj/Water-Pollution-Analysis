<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Indian Mine Effluent Quality Index Calculator</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary: #2F4F4F;
            --secondary: #FFD700;
            --accent: #00B4D8;
            --light: #F8F9FA;
            --dark: #212529;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
        }

        /* Base Reset */
   *, *::before, *::after {
   box-sizing: border-box;
   margin: 0;
   padding: 0;
    }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            display: flex;
            justify-content: center;
            flex-direction: column;
             align-items: center;
            min-height: 100vh;
            margin: 0;
            overflow-x: hidden;
            
            
            position: relative;
            padding-bottom: 10px;
            box-sizing: border-box;
        }
        
        /* Floating particles */
        #particles {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
  overflow: hidden;
}

    .particle {
  position: absolute;
  background: rgba(47, 79, 79, 0.1);
  border-radius: 50%;
  animation: float linear infinite;
}
        @keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-1000px) rotate(720deg);
                opacity: 0;
            }
        }
        
       /* Main container */
       .container {
  background: rgba(255, 255, 255, 0.95);
  padding: 30px;
  width: 90%;
  max-width: 1000px;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
  border-radius: 20px;
  margin: 20px auto;
  position: relative;
  z-index: 1;
  animation: fadeInUp 0.8s ease-out;
}
        
        .container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 110%;
            background: linear-gradient(45deg, transparent 65%, rgba(0, 123, 255, 0.1) 100%);
            transform: rotate(30deg);
            z-index: -1;
            /* animation: shine 8s infinite linear; */
        }
        
        @keyframes shine {
            0% {
                transform: rotate(30deg) translate(-10%, -10%);
            }
            100% {
                transform: rotate(30deg) translate(10%, 10%);
            }
        }
        
        header {
            background: linear-gradient(135deg, var(--primary) 0%, #3a7d7d 100%);
            color: white;
            padding: 25px 0;
            text-align: center;
            border-radius: 12px;
            margin-bottom: 30px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        }
        
        h1 {
            margin: 0;
            font-size: 28px;
            font-weight: 600;
        }
        
        .subtitle {
            font-size: 16px;
            opacity: 0.9;
            margin-top: 8px;
            font-weight: 300;
        }
        
        .calculator-container {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
          
            margin-bottom: 30px;
            position: relative;
        }
        
        .tabs {
            display: flex;
            background-color: var(--light);
            border-bottom: 1px solid #ddd;
        }
        
        .tab {
            padding: 18px 20px;
            cursor: pointer;
            font-weight: 600;
            color: var(--dark);
            transition: all 0.3s ease;
            text-align: center;
            flex: 1;
            position: relative;
        }
        
        .tab.active {
            background-color: white;
            color: var(--primary);
            border-bottom: 3px solid var(--accent);
        }
        
        .tab:hover {
            background-color: rgba(0, 180, 216, 0.1);
        }
        
        .tab-content {
            display: none;
            padding: 25px;
            animation: fadeIn 0.5s ease-out;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark);
        }
        
        select, input {
            width: 100%;
            padding: 14px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s;
            background-color: rgba(255, 255, 255, 0.8);
        }
        
        select:focus, input:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px rgba(0, 180, 216, 0.2);
            background-color: white;
        }
        
        .parameter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .parameter-card {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid var(--accent);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }
        
        .parameter-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        
        .parameter-title {
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--primary);
            font-size: 16px;
        }
        
        .btn {
            display: inline-block;
            background: linear-gradient(135deg, var(--accent) 0%, #0096c7 100%);
            color: white;
            border: none;
            padding: 16px 30px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            text-align: center;
            margin-top: 20px;
            letter-spacing: 0.5px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 180, 216, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 180, 216, 0.4);
        }
        
        .btn:active {
            transform: translateY(1px);
        }
        
        .btn::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(rgba(255, 255, 255, 0.2), transparent);
            transform: translateY(-100%);
            transition: transform 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
        }
        
        .btn:hover::after {
            transform: translateY(0);
        }
        
        .btn-block {
            display: block;
            width: 100%;
        }
        
        .result-container {
            margin-top: 30px;
            padding: 30px;
            border-radius: 12px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(240, 248, 255, 0.95) 100%);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.5s ease;
            opacity: 0;
            height: 0;
            overflow: hidden;
        }
        
        .result-container.show {
            opacity: 1;
            height: auto;
            padding: 30px;
            margin-top: 30px;
            animation: fadeInUp 0.8s ease-out;
        }
        
        .result-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        
        .result-title {
            font-size: 24px;
            font-weight: 700;
            color: var(--primary);
            margin: 0;
        }
        
        .result-score {
            font-size: 28px;
            font-weight: 700;
            padding: 10px 25px;
            border-radius: 50px;
            background: linear-gradient(135deg, rgba(178, 235, 242, 0.3) 0%, rgba(128, 222, 234, 0.3) 100%);
        }
        
        .score-excellent {
            color: var(--success);
            background: linear-gradient(135deg, rgba(40, 167, 69, 0.1) 0%, rgba(40, 167, 69, 0.3) 100%);
        }
        
        .score-good {
            color: var(--accent);
            background: linear-gradient(135deg, rgba(0, 180, 216, 0.1) 0%, rgba(0, 180, 216, 0.3) 100%);
        }
        
        .score-fair {
            color: var(--warning);
            background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.3) 100%);
        }
        
        .score-poor {
            color: var(--danger);
            background: linear-gradient(135deg, rgba(220, 53, 69, 0.1) 0%, rgba(220, 53, 69, 0.3) 100%);
        }
        
        .result-details {
            margin-top: 25px;
        }
        
        .parameter-result {
            display: flex;
            justify-content: space-between;
            padding: 12px 0;
            border-bottom: 1px solid #eee;
        }
        
        .parameter-name {
            font-weight: 600;
            color: var(--dark);
        }
        
        .parameter-value {
            font-family: 'Courier New', monospace;
            font-weight: 600;
        }
        
        .discharge-recommendation {
            margin-top: 30px;
            padding: 20px;
            border-radius: 10px;
            background-color: #f8f9fa;
            border-left: 4px solid var(--accent);
        }
        
        .recommendation-title {
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--primary);
            font-size: 18px;
        }
        
        .info-box {
            background-color: #e8f4fd;
            border-left: 4px solid var(--accent);
            padding: 20px;
            margin-bottom: 25px;
            border-radius: 0 8px 8px 0;
        }
        
        .info-title {
            font-weight: 600;
            color: var(--accent);
            margin-top: 0;
            font-size: 18px;
        }
        
        /* Back button */
        .back-button-container {
            position: fixed;
            top: 30px;
            left: 30px;
            z-index: 100;
        }
        
        .back-button {
            background: linear-gradient(135deg, var(--primary) 0%, #3a7d7d 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 50px;
            transition: all 0.4s cubic-bezier(0.165, 0.885, 0.32, 1.275);
            font-weight: 500;
            box-shadow: 0 4px 10px rgba(58, 97, 97, 0.3);
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .back-button:hover {
            transform: translateX(-5px) scale(1.05);
            box-shadow: 0 8px 20px rgba(47, 79, 79, 0.4);
        }
        
        /* Fix for water wave animation */
.water-wave {
    position: fixed; /* Keep this */
    bottom: 0; /* Remove the -100px declaration and just use 0 */
    left: 0;
    width: 100%;
    height: 100px;
    background: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1200 120" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" fill="%232F4F4F" opacity=".25"/><path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" fill="%232F4F4F" opacity=".5"/><path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="%232F4F4F"/></svg>');
    background-size: cover;
    animation: wave 15s linear infinite;
    z-index: -1;
    pointer-events: none;
}
        @keyframes wave {
    0% { background-position-x: 0; }
    100% { background-position-x: 1200px; }
     }
        
        /* Responsive design */
        @media (max-width: 992px) {
            .container {
                width: 90%;
                padding: 30px;
            }
            
            .parameter-grid {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 20px;
                width: 95%;
                margin: 15px auto;
            }
            
            .tabs {
                flex-direction: column;
            }
            
            .tab {
                border-bottom: 1px solid #ddd;
            }
            
            .tab.active {
                border-bottom: 3px solid var(--accent);
            }
            
            .back-button-container {
                top: 15px;
                left: 15px;
            }
            .header {
    padding: 20px;
  }
  
  .water-wave {
    height: 60px;
  }
        }
        
        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <!-- Floating particles -->
    <div id="particles"></div>
    
    <!-- Back to Home Button -->
    <div class="back-button-container animate__animated animate__fadeInLeft">
        <button class="back-button" onclick="goBackHome()">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>
            Back to Home
        </button>
    </div>

    <div class="container">
        <header class="animate__animated animate__fadeIn">
            <h1>Effluent Water Quality Index Calculator</h1>
            <div class="subtitle">For Indian Mining Operations</div>
        </header>
        
        <div class="calculator-container animate__animated animate__fadeInUp">
            <div class="tabs">
                <div class="tab active" data-tab="physical">Physical Parameters</div>
                <div class="tab" data-tab="undesirable">Undesirable Parameters</div>
                <div class="tab" data-tab="toxic">Toxic Parameters</div>
            </div>
            
            <form id="ewqi-form">
                <div class="tab-content active" id="physical-content">
                    <div class="info-box">
                        <h3 class="info-title">Organoleptic/Physical Parameters</h3>
                        <p>These parameters affect the physical appearance and properties of water. Weight: 3</p>
                    </div>
                    
                    <div class="parameter-grid">
                        <div class="parameter-card">
                            <div class="parameter-title">Color and Odor</div>
                            <div class="form-group">
                                <label for="color-odor">Condition</label>
                                <select id="color-odor" class="param-select">
                                    <option value="1">Acceptable (No noticeable color/odor)</option>
                                    <option value="2">Slightly noticeable</option>
                                    <option value="3">Clearly noticeable</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Suspended Solids (mg/L)</div>
                            <div class="form-group">
                                <label for="suspended-solids">Concentration</label>
                                <input type="number" id="suspended-solids" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">pH Value</div>
                            <div class="form-group">
                                <label for="ph-value">pH Level</label>
                                <input type="number" id="ph-value" class="param-input" min="0" max="14" step="0.1" placeholder="6.0-8.5 ideal">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Temperature (°C)</div>
                            <div class="form-group">
                                <label for="temperature">Water Temperature</label>
                                <input type="number" id="temperature" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">BOD (mg/L)</div>
                            <div class="form-group">
                                <label for="bod">Biochemical Oxygen Demand</label>
                                <input type="number" id="bod" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">COD (mg/L)</div>
                            <div class="form-group">
                                <label for="cod">Chemical Oxygen Demand</label>
                                <input type="number" id="cod" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="tab-content" id="undesirable-content">
                    <div class="info-box">
                        <h3 class="info-title">Undesirable Parameters</h3>
                        <p>These parameters are harmful but not immediately toxic. Weight: 6</p>
                    </div>
                    
                    <div class="parameter-grid">
                        <div class="parameter-card">
                            <div class="parameter-title">Oil and Grease (mg/L)</div>
                            <div class="form-group">
                                <label for="oil-grease">Concentration</label>
                                <input type="number" id="oil-grease" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Ammonical Nitrogen (mg/L)</div>
                            <div class="form-group">
                                <label for="ammonical-nitrogen">Concentration</label>
                                <input type="number" id="ammonical-nitrogen" class="param-input" min="0" step="0.1" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Fluoride (mg/L)</div>
                            <div class="form-group">
                                <label for="fluoride">Concentration</label>
                                <input type="number" id="fluoride" class="param-input" min="0" step="0.01" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Manganese (mg/L)</div>
                            <div class="form-group">
                                <label for="manganese">Concentration</label>
                                <input type="number" id="manganese" class="param-input" min="0" step="0.001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Iron (mg/L)</div>
                            <div class="form-group">
                                <label for="iron">Concentration</label>
                                <input type="number" id="iron" class="param-input" min="0" step="0.01" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Copper (mg/L)</div>
                            <div class="form-group">
                                <label for="copper">Concentration</label>
                                <input type="number" id="copper" class="param-input" min="0" step="0.001" placeholder="Enter value">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="tab-content" id="toxic-content">
                    <div class="info-box">
                        <h3 class="info-title">Toxic Parameters</h3>
                        <p>These parameters are highly toxic even at low concentrations. Weight: 10</p>
                    </div>
                    
                    <div class="parameter-grid">
                        <div class="parameter-card">
                            <div class="parameter-title">Arsenic (mg/L)</div>
                            <div class="form-group">
                                <label for="arsenic">Concentration</label>
                                <input type="number" id="arsenic" class="param-input" min="0" step="0.0001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Lead (mg/L)</div>
                            <div class="form-group">
                                <label for="lead">Concentration</label>
                                <input type="number" id="lead" class="param-input" min="0" step="0.001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Cadmium (mg/L)</div>
                            <div class="form-group">
                                <label for="cadmium">Concentration</label>
                                <input type="number" id="cadmium" class="param-input" min="0" step="0.0001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Mercury (mg/L)</div>
                            <div class="form-group">
                                <label for="mercury">Concentration</label>
                                <input type="number" id="mercury" class="param-input" min="0" step="0.0001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Chromium (mg/L)</div>
                            <div class="form-group">
                                <label for="chromium">Total Chromium</label>
                                <input type="number" id="chromium" class="param-input" min="0" step="0.001" placeholder="Enter value">
                            </div>
                        </div>
                        
                        <div class="parameter-card">
                            <div class="parameter-title">Cyanide (mg/L)</div>
                            <div class="form-group">
                                <label for="cyanide">Concentration</label>
                                <input type="number" id="cyanide" class="param-input" min="0" step="0.001" placeholder="Enter value">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="discharge-location">Proposed Discharge Location</label>
                    <select id="discharge-location">
                        <option value="inland">Inland Surface Water (Strictest)</option>
                        <option value="public-sewer">Public Sewer</option>
                        <option value="irrigation">Land for Irrigation</option>
                        <option value="marine">Marine Coastal Areas</option>
                    </select>
                </div>
                
                <button type="button" id="calculate-btn" class="btn btn-block">Calculate EWQI</button>
            </form>
        </div>
        
        <div class="result-container" id="result-container">
            <div class="result-header">
                <h2 class="result-title">Effluent Water Quality Index Result</h2>
                <div class="result-score" id="result-score">0.0</div>
            </div>
            
            <div class="result-details" id="result-details">
                <!-- Filled by JavaScript -->
            </div>
            
            <div class="discharge-recommendation" id="discharge-recommendation">
                <div class="recommendation-title">Discharge Recommendation</div>
                <p id="recommendation-text">Based on the calculated EWQI and selected discharge location, the recommendation will appear here.</p>
            </div>
        </div>
    </div>
    
    <!-- Water wave at bottom -->
    <div class="water-wave"></div>

    <script>
        // Create floating particles
        function createParticles() {
            const container = document.getElementById('particles');
            const colors = ['rgba(47, 79, 79, 0.1)', 'rgba(178, 235, 242, 0.1)', 'rgba(128, 222, 234, 0.1)'];
            
            for (let i = 0; i < 30; i++) {
                const particle = document.createElement('div');
                particle.classList.add('particle');
                particle.style.left = Math.random() * 100 + 'vw';
                particle.style.bottom = -Math.random() * 100 + 'px';
                particle.style.width = Math.random() * 15 + 5 + 'px';
                particle.style.height = particle.style.width;
                particle.style.background = colors[Math.floor(Math.random() * colors.length)];
                particle.style.animationDuration = Math.random() * 20 + 10 + 's';
                particle.style.animationDelay = Math.random() * 10 + 's';
                container.appendChild(particle);
            }
        }

        function goBackHome() {
            // Add animation before redirecting
            document.querySelector('.container').classList.add('animate__animated', 'animate__fadeOutDown');
            setTimeout(() => {
                window.location.href = 'fwater';
            }, 500);
        }

        document.addEventListener('DOMContentLoaded', function() {
            createParticles();
            
            // Tab functionality
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    // Remove active class from all tabs and content
                    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                    document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                    
                    // Add active class to clicked tab and corresponding content
                    this.classList.add('active');
                    const tabId = this.getAttribute('data-tab');
                    document.getElementById(`${tabId}-content`).classList.add('active');
                });
            });
            
            // Calculate button functionality
            document.getElementById('calculate-btn').addEventListener('click', calculateEWQI);
            
            function calculateEWQI() {
                // Get discharge location weight
                const dischargeLocation = document.getElementById('discharge-location').value;
                let locationWeight;
                switch(dischargeLocation) {
                    case 'inland': locationWeight = 1.0; break;
                    case 'public-sewer': locationWeight = 0.5; break;
                    case 'irrigation': 
                    case 'marine': 
                    default: locationWeight = 0.8; break;
                }
                
                // Calculate EWQI for each parameter category
                const physicalEWQI = calculateCategoryEWQI('physical', 3);
                const undesirableEWQI = calculateCategoryEWQI('undesirable', 6);
                const toxicEWQI = calculateCategoryEWQI('toxic', 10);
                
                // Calculate total EWQI
                const totalEWQI = (physicalEWQI + undesirableEWQI + toxicEWQI) / locationWeight;
                
                // Display results
                displayResults(totalEWQI, dischargeLocation);
            }
            
            function calculateCategoryEWQI(category, parameterWeight) {
                let categoryScore = 0;
                const parameters = document.querySelectorAll(`#${category}-content .param-input, #${category}-content .param-select`);
                
                parameters.forEach(param => {
                    let value;
                    if (param.classList.contains('param-select')) {
                        value = parseFloat(param.value) || 0;
                    } else {
                        value = parseFloat(param.value) || 0;
                    }
                    
                    // For this example, we'll use a simple scoring system
                    // In a real application, you would compare against standard limits
                    let parameterScore;
                    
                    if (category === 'physical') {
                        // Physical parameters scoring
                        if (param.id === 'color-odor') {
                            parameterScore = (4 - value) * 25; // Convert 1-3 scale to 75-25 score
                        } else if (param.id === 'ph-value') {
                            // Ideal pH is 7, score decreases as it moves away
                            const pH = value;
                            if (pH >= 6.5 && pH <= 8.5) parameterScore = 100;
                            else if ((pH >= 6.0 && pH < 6.5) || (pH > 8.5 && pH <= 9.0)) parameterScore = 80;
                            else if ((pH >= 5.5 && pH < 6.0) || (pH > 9.0 && pH <= 9.5)) parameterScore = 60;
                            else parameterScore = 30;
                        } else {
                            // For other physical parameters, assume lower is better
                            parameterScore = Math.max(0, 100 - (value * 2));
                        }
                    } else if (category === 'undesirable') {
                        // Undesirable parameters scoring
                        parameterScore = Math.max(0, 100 - (value * 10));
                    } else {
                        // Toxic parameters scoring - very sensitive to small amounts
                        parameterScore = Math.max(0, 100 - (value * 1000));
                    }
                    
                    categoryScore += parameterScore * parameterWeight;
                });
                
                return categoryScore;
            }
            
            function displayResults(ewqi, dischargeLocation) {
                const resultContainer = document.getElementById('result-container');
                const resultScore = document.getElementById('result-score');
                const resultDetails = document.getElementById('result-details');
                const recommendationText = document.getElementById('recommendation-text');
                
                // Set score and style
                resultScore.textContent = ewqi.toFixed(1);
                
                // Determine rating
                let rating, ratingClass;
                if (ewqi >= 90) {
                    rating = "Excellent";
                    ratingClass = "score-excellent";
                } else if (ewqi >= 70) {
                    rating = "Good";
                    ratingClass = "score-good";
                } else if (ewqi >= 50) {
                    rating = "Fair";
                    ratingClass = "score-fair";
                } else {
                    rating = "Poor";
                    ratingClass = "score-poor";
                }
                
                resultScore.className = `result-score ${ratingClass}`;
                
                // Create details HTML
                let detailsHTML = `
                    <div class="parameter-result">
                        <span class="parameter-name">Overall EWQI Score</span>
                        <span class="parameter-value">${ewqi.toFixed(1)} (${rating})</span>
                    </div>
                    <div class="parameter-result">
                        <span class="parameter-name">Proposed Discharge Location</span>
                        <span class="parameter-value">${document.getElementById('discharge-location').options[document.getElementById('discharge-location').selectedIndex].text}</span>
                    </div>
                `;
                
                resultDetails.innerHTML = detailsHTML;
                
                // Set recommendation based on EWQI and discharge location
                let recommendation;
                const locationName = document.getElementById('discharge-location').options[document.getElementById('discharge-location').selectedIndex].text;
                
                if (ewqi >= 90) {
                    recommendation = `The effluent quality is EXCELLENT and can be safely discharged to ${locationName} without additional treatment.`;
                } else if (ewqi >= 70) {
                    recommendation = `The effluent quality is GOOD and can be discharged to ${locationName} with minimal treatment (basic filtration may be required).`;
                } else if (ewqi >= 50) {
                    recommendation = `The effluent quality is FAIR and requires treatment before discharge to ${locationName}. Consider filtration and chemical treatment.`;
                } else {
                    recommendation = `The effluent quality is POOR and requires extensive treatment before discharge to ${locationName}. Immediate remediation measures are recommended.`;
                }
                
                // Additional location-specific recommendations
                if (dischargeLocation === 'inland' && ewqi < 70) {
                    recommendation += " Note: Inland surface water has the strictest standards. Additional treatment is strongly recommended.";
                } else if (dischargeLocation === 'public-sewer' && ewqi < 50) {
                    recommendation += " Warning: Even public sewers have limits. Consult with local authorities before discharge.";
                }
                
                recommendationText.textContent = recommendation;
                
                // Show results with animation
                resultContainer.classList.add('show');
                resultContainer.scrollIntoView({ behavior: 'smooth' });
            }
        });
    </script>
</body>
</html>